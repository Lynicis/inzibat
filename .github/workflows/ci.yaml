name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: magnetikonline/action-golang-cache@v3
        with:
          go-version: ~1.20

      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  build:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: magnetikonline/action-golang-cache@v3
        with:
          go-version: ~1.20

      - run: CGO_ENABLED=0 GOOS=linux go build -o inzibat .

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: magnetikonline/action-golang-cache@v3
        with:
          go-version: ~1.20

      - run: go test -tags=unit -coverprofile=coverage.out -covermode=atomic ./...

      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage.out

  coverage:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: code-coverage

      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security-analysis:
    needs: [ coverage ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: securego/gosec@master
        with:
          args: ./...

  versioning:
    needs: [ security-analysis ]
    runs-on: ubuntu-latest
    environment: latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: WyriHaximus/github-action-get-previous-tag@v1
        id: latest-tag

      - name: Bump Major Versioning
        id: major-versioning
        if: contains(github.event.head_commit.message, 'major:')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.latest-tag.outputs.tag }}
          version-fragment: major

      - name: Bump Minor Versioning
        id: minor-versioning
        if: contains(github.event.head_commit.message, 'minor:')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.latest-tag.outputs.tag }}
          version-fragment: feature

      - name: Bump Patch Versioning
        id: patch-versioning
        if: contains(github.event.head_commit.message, 'patch:')
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.latest-tag.outputs.tag }}
          version-fragment: bug

      - name: Handle Versioning
        run: |
          if [[ contains(github.event.head_commit.message, 'major:') ]]; then
            echo "NEXT_VERSION=${{steps.major-versioning.outputs.next-version}}" >> $GITHUB_ENV
          fi
          
          if [[ contains(github.event.head_commit.message, 'minor::') ]]; then
            echo "NEXT_VERSION=${{steps.minor-versioning.outputs.next-version}}" >> $GITHUB_ENV
          fi
          
          if [[ contains(github.event.head_commit.message, 'patch:') ]]; then
            echo "NEXT_VERSION=${{steps.patch-versioning.outputs.next-version}}" >> $GITHUB_ENV
          fi

      - uses: JasonEtco/build-and-tag-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          tag_name: "v${{env.NEXT_VERSION}}"
